SQL的存在的问题：
	在高并发情况下，SQL读写性能受限与磁盘读写速度，容易导致系统瘫痪。
	日常对数据库的访问中，读操作的次数远超写操作。当使用SQL语句对数据库进行读操作时，数据库会从内存中

什么是Redis？
	Redis是目前广泛使用的NoSQL，它是一种基于内存的数据库，并且提供一定的持久化功能。
	
Redis的优点：
	Redis支持高性能读写操作，性能远超SQL，并且支持集群、分布式、主从同步等配置，原则上可以无限扩展，让更多的数据存储在内存中。
	
Redis的缺陷：
	Redis因为存储在内存中，因此存储数据的开销比较大，出于成本的原因，一般我们只用Redis存储一些常用和主要的数据，比如用户登录信息等。
	
Redis的主要应用场景：
	* 存储缓存用的数据；
	* 需要高速读/写的场合使用它快速读/写；
	
Redis作为缓存使用时，需要考虑的几个方面：
	* 业务数据是否常用？命中率如何？如果命中率很低，就没有必要写入缓存。
	* 该业务数据是读操作多，还是写操作多？如果写操作多，频繁需要写入数据库，就没有必要使用缓存。
	* 业务数据大小如何？如果存储了几百兆字节的文件，不适合当缓存。
	
	Redis作为缓存时的读逻辑：
		1.第一次读取数据时候，读取Redis的数据就会失败，此时程序从数据库中读取数据，并把读出来的数据写入Redis中。
		2.第二次及以后读取数据时候，直接从Redis中读取数据，从而减少数据库的压力。
	Redis作为缓存时的写逻辑：
		数据先写入数据库，然后数据再写入Redis。因此当业务数据的写次数远大于读次数就没有必要使用Redis了。
		
Redis用在高速读/写的场合
	在很多高并发的情况下，比如抢红包，抢车票等，服务器在某一瞬间会收到成千上万的请求，此时单纯的数据库来处理可能导致响应速度极慢，甚至服务器宕机。
	Redis在高速读写时的逻辑：
		1.当一个请求到达服务器时，只是把业务数据在Redis上进行读写，没有任何数据库操作。
		2.在请求完成Redis的读写操作，服务器会判断Redis的读写业务是否结束（这个操作通常会在红包抢完，门票抢完时进行），如果结束，则触发事件将Redis的缓存数据以批量的形式一次性写入数据库，从而完成持久化的工作。
		