HTTP请求头信息：
    Accept: 浏览器能够处理的内容类型(MIME类型）
    Accept-Encoding: 浏览器能够处理的压缩编码
    Accept-Language: 浏览器希望的语言种类，当服务器能够提供一种以上的语言版本时用到。
    Accept-Charset: 浏览器能够显示的字符集
    Connection: 浏览器与服务器之间的连接类型
    Cookie： 当前页面设置的所有cookie
    Host: 发出请求的页面所在的区域
    Referer: 发出请求的页面的URL
    User-Agent: 浏览器的用户代理字符串
    Content-Length: 请求消息正文的长度
   
HTTP响应头信息：
    Date: 消息发送的时间，时间描述格式由rfc822定义
    Server: 服务器名称
    Connection: 浏览器与服务器之间的连接类型
    Content-Type: 表示响应的文档属于什么MIME类型
    Cache-Control: 控制HTTP缓存

    
    
    
    
HTTP与HTTPS的区别
    HTTP的主要优点：效率高。
    HTTP的缺点：不安全
        采用明文传输，会被窃听；
        传输过程中不验证对方身份，可能遭遇伪装；
        不进行报文的完整性的校验，报文可能遭篡改。
    
    
    HTTPS的主要特点：
        HTTPS在HTTP基础上具备了加密、认证和完整性保护的三个特点，即解决了上述HTTP的三个缺点。
    
    HTTPS采用的加密技术
        非对称加密+对称加密
            在连接最初的时候使用非对称加密方式保证连接的安全性，之后稳定之后采用对称加密。因此需要耗费CPU资源。
            为什么使用“非对称加密+对称加密”？
                仅使用“对称加密”：对称加密要求加密方和解密方使用同一个密钥，而以明文的方式在网络上传输密钥是非常危险的。
                仅使用“非对称加密”：加密方适用公钥加密，解密方因为没有私钥无法解密；加密方使用私钥加密，但是公钥是公开的，也就失去了加密的意义。如果通信双方各执一份公钥/私钥对，发送时使用对方的公钥加密，接收时使用自己的私钥解密，可以达到加密的效果，但是非对称加密的运算性能远远低于对称加密，大大增加服务器负担和通信速率。
        数字证书的作用
            在客户端获取非对称加密的公钥时，无法保证公钥是服务器所发行的。如果使用了不安全的公钥加密，很有可能遭受中间人攻击，虽然表面上看通信正常，但是数据已经不知不觉被他人窃取。因此需要一个可靠的第三方机构来发布公钥。数字证书就由第三方机构颁发，其中包含了公钥以及其他安全性相关信息。
            
        购买证书要钱
            
    基于HTTPS的上述缺点，HTTP仍然被很多网站采用
            
            
            
            
            
            
            
            
            
            
            
            
            